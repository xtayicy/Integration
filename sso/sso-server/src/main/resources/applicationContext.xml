<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans.xsd
	       http://www.springframework.org/schema/context
		   http://www.springframework.org/schema/context/spring-context.xsd
		   http://www.springframework.org/schema/aop
	       http://www.springframework.org/schema/aop/spring-aop.xsd
		   http://www.springframework.org/schema/tx 
	       http://www.springframework.org/schema/tx/spring-tx.xsd">
	<context:component-scan base-package="harry"/>       
	<context:annotation-config />
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<bean id="paginationInterceptor" class="harry.interceptors.PaginationInterceptor"/>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapping/*.xml" />
		<property name="plugins">
			<ref bean="paginationInterceptor" />
		</property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- dao接口所在的位置 需要用到动态代理 -->
		<property name="basePackage" value="harry.dao" />
		<!-- 配置sqlSessionFactory后jdbc.properties就不起作用了 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- enable transaction annotation support -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- SSO安全码管理 -->
	<bean id="tokenManager" class="harry.common.TokenManager"/>
    <!-- 引入定时任务相关 -->
    <!-- <import resource="applicationContext-job.xml"/> -->
    <!-- 引入Dubbo服务相关 -->
    <!-- <import resource="dubbo-provider.xml"/> -->
</beans>